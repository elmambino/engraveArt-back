import Review from "../models/Review.js";
import { Telegraf } from "telegraf";
const bot = new Telegraf("7095638242:AAGY5RGu26_GFqM60YEVKt6WPwrSXiM6NQ0");
const TELEGRAM_CHAT_ID = -4730504232;

class ReviewController {
  async createReview(req, res) {
    try {
      const { stars, name, text } = req.body;

      if (!stars || !name || !text) {
        return res.status(400).json({
          message: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥, –∏–º—è –∏ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞",
        });
      }

      if (stars < 1 || stars > 5) {
        return res.status(400).json({
          message: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 5",
        });
      }

      const review = new Review({
        stars,
        name,
        text,
      });

      const savedReview = await review.save();

      const starsDisplay = "‚≠ê".repeat(stars);
      const message = `
  üì£ –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤!
  üë§ –ò–º—è: ${name}
  ‚≠ê –û—Ü–µ–Ω–∫–∞: ${starsDisplay} (${stars}/5)
  üí¨ –¢–µ–∫—Å—Ç: ${text}
        `;

      await bot.telegram.sendMessage(TELEGRAM_CHAT_ID, message);

      return res.status(201).json({
        success: true,
        message: "–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω",
        review: savedReview,
      });
    } catch (error) {
      console.log(error);
      return res.status(500).json({
        success: false,
        message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞",
        error: error.message,
      });
    }
  }

  async getAllReviews(req, res) {
    try {
      const reviews = await Review.find().sort({ createdAt: -1 });
      return res.json(reviews);
    } catch (error) {
      console.log(error);
      return res.status(500).json({
        message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤",
      });
    }
  }
}

export default new ReviewController();
